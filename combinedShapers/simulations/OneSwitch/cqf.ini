[Config TC1000_cqf]
network = combinedshapers.simulations.OneSwitch.oneswitch
#abstract-config = true (requires omnet 6)
description = ""

# Set the simulation time
sim-time-limit = 200s
repeat = 10

# disable automatic MAC forwarding table configuration
*.macForwardingTableConfigurator.typename = ""

# disable local multicast loop
**.udp.defaultMulticastLoop = false

*.*.eth[*].bitrate = 1Gbps

##########################
# Visualizer Configuration
# enable multiple canvas visualizers
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"

#################################

#*.node*.app[*].tagger.typename = "PacketTagger" # enable VLAN Tagging

#############################
# Stream Coding Configuration
*.*.hasOutgoingStreams = true
*.*.hasIncomingStreams = true

## disable forwarding IEEE 802.1Q C-Tag
#*.sw*.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

###############################
# Traffic Shaping Configuration
*.sw*.hasEgressTrafficShaping = true

*.sw*.eth[*].macLayer.queue.numTrafficClasses = 2
*.sw*.eth[*].macLayer.queue.*[0].display-name = "TT"
*.sw*.eth[*].macLayer.queue.*[1].display-name = "TT"
*.sw*.eth[*].macLayer.queue.*[2].display-name = "BE"


*.sw*.eth[*].macLayer.queue.typename = "Ieee8021qCyclicQueueingAndForwarding"
*.sw*.eth[*].macLayer.queue.transmissionGate[0].durations = [50us, 50us]
*.sw*.eth[*].macLayer.queue.transmissionGate[0].offset = 0us
*.sw*.eth[*].macLayer.queue.transmissionGate[1].durations = [50us, 50us]
*.sw*.eth[*].macLayer.queue.transmissionGate[1].offset = 50us
*.sw*.eth[*].macLayer.queue.transmissionGate[2].alwaysOpen = true

*.sw_0_1.macTable.forwardingTable = [
                {address: "node0_0_0_3", interface: "eth2", vlan: 7}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 13}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 16}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 6}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 19}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 25}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 28}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 18}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 15}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 5}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 24}, 
                {address: "node0_0_0_3", interface: "eth2", vlan: 4}, 
                ]

*.sw_0_2.macTable.forwardingTable = [
                {address: "node0_0_0_3", interface: "eth0", vlan: 16}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 6}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 19}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 25}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 28}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 18}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 15}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 5}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 24}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 4}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 7}, 
                {address: "node0_0_0_3", interface: "eth0", vlan: 13}, 
                ]

*.node0_0_0_1.app[0].typename = "UdpSourceApp"
*.node0_0_0_1.app[0].display-name = "VLAN_0_Flow_4"
*.node0_0_0_1.app[0].io.destAddress = "node0_0_0_3"
*.node0_0_0_1.app[0].io.destPort = 1004
*.node0_0_0_1.app[0].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_1.app[0].source.packetLength = 488B - 58B
*.node0_0_0_1.app[0].source.productionInterval = 1000us
*.node0_0_0_1.app[0].source.initialProductionOffset = 0s
*.node0_0_0_3.app[0].typename = "UdpSinkApp"
*.node0_0_0_3.app[0].io.localPort = 1004

*.node0_0_0_1.app[1].typename = "UdpSourceApp"
*.node0_0_0_1.app[1].display-name = "VLAN_0_Flow_5"
*.node0_0_0_1.app[1].io.destAddress = "node0_0_0_3"
*.node0_0_0_1.app[1].io.destPort = 1005
*.node0_0_0_1.app[1].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_1.app[1].source.packetLength = 501B - 58B
*.node0_0_0_1.app[1].source.productionInterval = 2500us
*.node0_0_0_1.app[1].source.initialProductionOffset = 0s
*.node0_0_0_3.app[1].typename = "UdpSinkApp"
*.node0_0_0_3.app[1].io.localPort = 1005

*.node0_0_0_1.app[2].typename = "UdpSourceApp"
*.node0_0_0_1.app[2].display-name = "VLAN_0_Flow_6"
*.node0_0_0_1.app[2].io.destAddress = "node0_0_0_3"
*.node0_0_0_1.app[2].io.destPort = 1006
*.node0_0_0_1.app[2].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_1.app[2].source.packetLength = 351B - 58B
*.node0_0_0_1.app[2].source.productionInterval = 5000us
*.node0_0_0_1.app[2].source.initialProductionOffset = 0s
*.node0_0_0_3.app[2].typename = "UdpSinkApp"
*.node0_0_0_3.app[2].io.localPort = 1006

*.node0_0_0_1.app[3].typename = "UdpSourceApp"
*.node0_0_0_1.app[3].display-name = "VLAN_0_Flow_7"
*.node0_0_0_1.app[3].io.destAddress = "node0_0_0_3"
*.node0_0_0_1.app[3].io.destPort = 1007
*.node0_0_0_1.app[3].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_1.app[3].source.packetLength = 440B - 58B
*.node0_0_0_1.app[3].source.productionInterval = 5000us
*.node0_0_0_1.app[3].source.initialProductionOffset = 0s
*.node0_0_0_3.app[3].typename = "UdpSinkApp"
*.node0_0_0_3.app[3].io.localPort = 1007

*.node0_0_0_1.app[4].typename = "UdpSourceApp"
*.node0_0_0_1.app[4].display-name = "VLAN_0_Flow_13"
*.node0_0_0_1.app[4].io.destAddress = "node0_0_0_3"
*.node0_0_0_1.app[4].io.destPort = 1013
*.node0_0_0_1.app[4].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_1.app[4].source.packetLength = 819B - 58B
*.node0_0_0_1.app[4].source.productionInterval = 2500us
*.node0_0_0_1.app[4].source.initialProductionOffset = 0s
*.node0_0_0_3.app[4].typename = "UdpSinkApp"
*.node0_0_0_3.app[4].io.localPort = 1013

*.node0_0_0_2.app[0].typename = "UdpSourceApp"
*.node0_0_0_2.app[0].display-name = "VLAN_0_Flow_15"
*.node0_0_0_2.app[0].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[0].io.destPort = 1015
*.node0_0_0_2.app[0].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[0].source.packetLength = 822B - 58B
*.node0_0_0_2.app[0].source.productionInterval = 1000us
*.node0_0_0_2.app[0].source.initialProductionOffset = 0s
*.node0_0_0_3.app[5].typename = "UdpSinkApp"
*.node0_0_0_3.app[5].io.localPort = 1015

*.node0_0_0_2.app[1].typename = "UdpSourceApp"
*.node0_0_0_2.app[1].display-name = "VLAN_0_Flow_16"
*.node0_0_0_2.app[1].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[1].io.destPort = 1016
*.node0_0_0_2.app[1].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[1].source.packetLength = 335B - 58B
*.node0_0_0_2.app[1].source.productionInterval = 5000us
*.node0_0_0_2.app[1].source.initialProductionOffset = 0s
*.node0_0_0_3.app[6].typename = "UdpSinkApp"
*.node0_0_0_3.app[6].io.localPort = 1016

*.node0_0_0_2.app[2].typename = "UdpSourceApp"
*.node0_0_0_2.app[2].display-name = "VLAN_0_Flow_18"
*.node0_0_0_2.app[2].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[2].io.destPort = 1018
*.node0_0_0_2.app[2].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[2].source.packetLength = 212B - 58B
*.node0_0_0_2.app[2].source.productionInterval = 2500us
*.node0_0_0_2.app[2].source.initialProductionOffset = 0s
*.node0_0_0_3.app[7].typename = "UdpSinkApp"
*.node0_0_0_3.app[7].io.localPort = 1018

*.node0_0_0_2.app[3].typename = "UdpSourceApp"
*.node0_0_0_2.app[3].display-name = "VLAN_0_Flow_19"
*.node0_0_0_2.app[3].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[3].io.destPort = 1019
*.node0_0_0_2.app[3].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[3].source.packetLength = 541B - 58B
*.node0_0_0_2.app[3].source.productionInterval = 5000us
*.node0_0_0_2.app[3].source.initialProductionOffset = 0s
*.node0_0_0_3.app[8].typename = "UdpSinkApp"
*.node0_0_0_3.app[8].io.localPort = 1019

*.node0_0_0_2.app[4].typename = "UdpSourceApp"
*.node0_0_0_2.app[4].display-name = "VLAN_0_Flow_24"
*.node0_0_0_2.app[4].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[4].io.destPort = 1024
*.node0_0_0_2.app[4].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[4].source.packetLength = 293B - 58B
*.node0_0_0_2.app[4].source.productionInterval = 5000us
*.node0_0_0_2.app[4].source.initialProductionOffset = 0s
*.node0_0_0_3.app[9].typename = "UdpSinkApp"
*.node0_0_0_3.app[9].io.localPort = 1024

*.node0_0_0_2.app[5].typename = "UdpSourceApp"
*.node0_0_0_2.app[5].display-name = "VLAN_0_Flow_25"
*.node0_0_0_2.app[5].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[5].io.destPort = 1025
*.node0_0_0_2.app[5].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[5].source.packetLength = 737B - 58B
*.node0_0_0_2.app[5].source.productionInterval = 2500us
*.node0_0_0_2.app[5].source.initialProductionOffset = 0s
*.node0_0_0_3.app[10].typename = "UdpSinkApp"
*.node0_0_0_3.app[10].io.localPort = 1025

*.node0_0_0_2.app[6].typename = "UdpSourceApp"
*.node0_0_0_2.app[6].display-name = "VLAN_0_Flow_28"
*.node0_0_0_2.app[6].io.destAddress = "node0_0_0_3"
*.node0_0_0_2.app[6].io.destPort = 1028
*.node0_0_0_2.app[6].source.packetNameFormat = "%M->node0_0_0_3:TT:gId1-%c"
*.node0_0_0_2.app[6].source.packetLength = 696B - 58B
*.node0_0_0_2.app[6].source.productionInterval = 2500us
*.node0_0_0_2.app[6].source.initialProductionOffset = 0s
*.node0_0_0_3.app[11].typename = "UdpSinkApp"
*.node0_0_0_3.app[11].io.localPort = 1028

*.node0_0_0_1.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1004), stream: "VLAN_0_Flow_4", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1005), stream: "VLAN_0_Flow_5", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1006), stream: "VLAN_0_Flow_6", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1007), stream: "VLAN_0_Flow_7", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1013), stream: "VLAN_0_Flow_13", sequenceNumbering: true}, ]
*.node0_0_0_1.bridging.streamCoder.encoder.mapping = [{stream: "VLAN_0_Flow_4", pcp: 4, vlan: 4}, {stream: "VLAN_0_Flow_5", pcp: 4, vlan: 5}, {stream: "VLAN_0_Flow_6", pcp: 4, vlan: 6}, {stream: "VLAN_0_Flow_7", pcp: 4, vlan: 7}, {stream: "VLAN_0_Flow_13", pcp: 4, vlan: 13}, ]

*.node0_0_0_2.bridging.streamIdentifier.identifier.mapping = [{packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1015), stream: "VLAN_0_Flow_15", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1016), stream: "VLAN_0_Flow_16", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1018), stream: "VLAN_0_Flow_18", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1019), stream: "VLAN_0_Flow_19", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1024), stream: "VLAN_0_Flow_24", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1025), stream: "VLAN_0_Flow_25", sequenceNumbering: true}, {packetFilter: expr(has(udp) && name =~ "*->node0_0_0_3:*" && udp.destPort == 1028), stream: "VLAN_0_Flow_28", sequenceNumbering: true}, ]
*.node0_0_0_2.bridging.streamCoder.encoder.mapping = [{stream: "VLAN_0_Flow_15", pcp: 4, vlan: 15}, {stream: "VLAN_0_Flow_16", pcp: 4, vlan: 16}, {stream: "VLAN_0_Flow_18", pcp: 4, vlan: 18}, {stream: "VLAN_0_Flow_19", pcp: 4, vlan: 19}, {stream: "VLAN_0_Flow_24", pcp: 4, vlan: 24}, {stream: "VLAN_0_Flow_25", pcp: 4, vlan: 25}, {stream: "VLAN_0_Flow_28", pcp: 4, vlan: 28}, ]

*.node0_0_0_1.numApps = 5
*.node0_0_0_3.numApps = 12
*.node0_0_0_2.numApps = 7
